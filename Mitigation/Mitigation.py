#!/usr/bin/env python3

import sys, time  
import os
import multiprocessing
from scapy.all import *
os.system('cls' if os.name == 'nt' else 'clear')

print("""
	\033[92m
·██ ▐███▪██ •██  ██ ▐█ ▀ ▪▐█ ▀█ •██  ██ ▪     •█▌▐█
• ▌ ▄ ·. ▪  ▄▄▄▄▄▪   ▄▄ •  ▄▄▄· ▄▄▄▄▄▪         ▐ ▄ 
██ ██▌▐█▌▐█▌ ▐█▌·▐█▌▐█▄▪▐█▐█ ▪▐▌ ▐█▌·▐█▌▐█▌.▐▌██▐█▌
▀▀  █▪▀▀▀▀▀▀ ▀▀▀ ▀▀▀·▀▀▀▀  ▀  ▀  ▀▀▀ ▀▀▀ ▀█▄▀▪▀▀ █▪
▐█ ▌▐▌▐█·▐█· ▐█.▪▐█·▄█ ▀█▄▄█▀▀█  ▐█.▪▐█· ▄█▀▄ ▐█▐▐▌

	""")
time.sleep(0.2)
os.system('cls' if os.name == 'nt' else 'clear')
print("""
	\033[92m
·██ ▐███▪██ •██  ██ ▐█ ▀ ▪▐█ ▀█ •██  ██ ▪     •█▌▐█
▐█ ▌▐▌▐█·▐█· ▐█.▪▐█·▄█ ▀█▄▄█▀▀█  ▐█.▪▐█· ▄█▀▄ ▐█▐▐▌
• ▌ ▄ ·. ▪  ▄▄▄▄▄▪   ▄▄ •  ▄▄▄· ▄▄▄▄▄▪         ▐ ▄ 
▀▀  █▪▀▀▀▀▀▀ ▀▀▀ ▀▀▀·▀▀▀▀  ▀  ▀  ▀▀▀ ▀▀▀ ▀█▄▀▪▀▀ █▪
██ ██▌▐█▌▐█▌ ▐█▌·▐█▌▐█▄▪▐█▐█ ▪▐▌ ▐█▌·▐█▌▐█▌.▐▌██▐█▌
			    \033[93m by
	""")
time.sleep(0.2)
os.system('cls' if os.name == 'nt' else 'clear')

def reset():
	os.system("iptables -P INPUT ACCEPT")
	os.system("iptables -P OUTPUT ACCEPT")
	os.system("iptables -P FORWARD ACCEPT")
	os.system("iptables -F INPUT")
	os.system("iptables -F OUTPUT")
	os.system("iptables -F FORWARD")
	print("\033[91m[▸]\033[94mSuccesfully reseted iptables")
	input()

def show():
	print("""\033[91m\033[4m
                                                                               
		""")
	print("\033[0m\033[91m")
	os.system("iptables -L  -v -n | grep 'DROP'")
	print("""\033[91m\033[4m
                                                                               		
		""")
	print("\033[0m")
	print("\033[94m")
def bye():

	os.system('cls' if os.name == 'nt' else 'clear')
	print("""\033[92m 
\t\t ▐ █▀ ▀█▄▐ █▌▐█▪ ▐▀▀ ▪ ▄▐ █· 
\t\t▄    ▄▄▄·        ▄·     ▄ ▌ ▄▄  ▄ .▄▄ 
\t\t▐  █    ▀ █    ▪ ▐ █  ▪█   █▌▀ ▄.▀·██▌
\t\t·▀▀▀    ▀      ▀       •      ▀▀ ▀  ▀ 
\t\t██▄▪▐█   ▐  █▀·.  ▐█ ▄  ▄▌ .▀ 
		""") 
	time.sleep(0.2)
	os.system('cls' if os.name == 'nt' else 'clear')
	print("""\033[92m 
\t\t▐█▀ ▀█▄▐█▌▐█▪ ▐▀▀▪▄▐█·
\t\t▄ ▄▄▄·    ▄· ▄▌▄▄ ▄ .▄▄ 
\t\t▐█ ▀█   ▪▐█▪█ █▌▀▄.▀·██▌
\t\t·▀▀▀ ▀   ▀   •   ▀▀▀  ▀ 
\t\t██▄▪▐█ ▐ █▀·. ▐█▄▄▌ .▀ 
		""") 
	time.sleep(0.2)
	os.system('cls' if os.name == 'nt' else 'clear')
	print("""\033[92m 
\t\t██▄▪▐█  ▐█▀·.▐█▄▄ ▌.▀ 
\t\t▄▄▄▄·  ▄ · ▄ ▌▄ ▄▄ . ▄▄ 
\t\t▐█  ▀█ ▪▐█▪██▌ ▀▄ .▀ ·██▌
\t\t·▀▀ ▀ ▀    ▀ •  ▀ ▀▀    ▀ 
\t\t▐█▀▀ █▄▐█▌▐█▪▐▀▀ ▪▄ ▐█·
		""")
	time.sleep(0.2)
	os.system('cls' if os.name == 'nt' else 'clear')
	print("""\033[92m 
\t\t▄▄▄▄·  ▄· ▄▌▄▄▄ .▄▄ 
\t\t▐█ ▀█▪▐█▪██▌▀▄.▀·██▌
\t\t▐█▀▀█▄▐█▌▐█▪▐▀▀▪▄▐█·
\t\t██▄▪▐█ ▐█▀·.▐█▄▄▌.▀ 
\t\t·▀▀▀▀   ▀ •  ▀▀▀  ▀ 
		""")
	
def th():
	while True:
		pkt = sniff(filter='icmp',count=2)
		for packet in pkt:
			aux = str(packet[IP].payload)
			if 'injected' in aux:
				block = "iptables -I INPUT -s {} -j DROP".format(packet[IP].src)
				os.system(block)

def main():
	t1 = multiprocessing.Process(target = th)
	while 1:
		print("""
	\033[92m
• ▌ ▄ ·. ▪  ▄▄▄▄▄▪   ▄▄ •  ▄▄▄· ▄▄▄▄▄▪         ▐ ▄ 
·██ ▐███▪██ •██  ██ ▐█ ▀ ▪▐█ ▀█ •██  ██ ▪     •█▌▐█
▐█ ▌▐▌▐█·▐█· ▐█.▪▐█·▄█ ▀█▄▄█▀▀█  ▐█.▪▐█· ▄█▀▄ ▐█▐▐▌
██ ██▌▐█▌▐█▌ ▐█▌·▐█▌▐█▄▪▐█▐█ ▪▐▌ ▐█▌·▐█▌▐█▌.▐▌██▐█▌
▀▀  █▪▀▀▀▀▀▀ ▀▀▀ ▀▀▀·▀▀▀▀  ▀  ▀  ▀▀▀ ▀▀▀ ▀█▄▀▪▀▀ █▪
			    \033[93m by AlexanderVanRat""")
		q1 = input("""\033[91m[▸]\033[94m Choose your option:
\033[93m[1]\033[94mStart listening for the injected packege and blacklist the src ip
\033[93m[2]\033[94mStop listening
\033[93m[3]\033[94mReset iptable
\033[93m[4]\033[94mShow blacklisted
\033[93m[5]\033[94mExit\n>>>""")
		if q1=="1":
			try:
				t1.start()
				print("\033[91m[▸]\033[94mStarted")
				input()
			except Exception as e:
				print("\n\033[94m[\033[97m!\033[94m]\033[91mAlready running")
				t1.terminate()
		elif q1=="2":
			try:
				t1.terminate()
				print("\033[91m[▸]\033[94m Terminated")
				input()
			except Exception as e:
				print("\n\033[94m[\033[97m!\033[94m]\033[91mNot started")
				input()
		elif q1=="3":
			reset()
		elif q1=="4":
			show()
			input()
		elif q1=="5":
			bye()
			try:	
				t1.terminate()
			except Exception as e:
				break
			break
		else:
			print("\n\033[94m[\033[97m!\033[94m]\033[91m Wrong option selected, please try again")
			input()
		os.system('cls' if os.name == 'nt' else 'clear')
if __name__ == '__main__':
     try:
        main()
     except KeyboardInterrupt:
        print("\n\033[94m[\033[97m!\033[94m]\033[91m INTRERUPTED")